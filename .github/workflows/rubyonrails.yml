name: "TUB-CI/CD"
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main", "develop"]
jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1.113.2
        with:
          ruby-version: 3.0.3
          bundler-cache: true

      - name: Set up database schema
        run: bin/rails db:schema:load

      - name: Run tests
        env:
          DATABASE_URL: postgres://postgres:password@localhost:5432/test
          RAILS_ENV: test
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}}
          PG_USER: postgres
        run: |
          rails db:test:prepare
          rails test

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1.113.2
        with:
          bundler-cache: true
      # Add or replace any other lints here
      - name: Security audit dependencies
        run: bundle exec bundle audit --update
      - name: Security audit application code
        run: bundle exec brakeman -q -w2
      - name: Lint Ruby files
        run: bundle exec rubocop --parallel

  deploy:
    if: ${{ github.even_name == 'push' && github.fer == 'refs/heads/main' }}
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to heroku using Docker container
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: "the-undermine-bot"
          heroku_email: "nell.dragneel@gmail.com"
          usedocker: true
